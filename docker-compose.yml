version: "3.8"
services:
  frontend:
    build:
      context: ./react-frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - "/usr/src/frontend/node_modules"
      - "./react-frontend:/usr/src/frontend"

  backend:
    build:
      context: .
      dockerfile: ./compose/local/flask/Dockerfile
    image: flask_backend
    # '/start' is the shell script used to run the service
    command: /start
    # this volume is used to map the files and folders on the host to the container
    # so if we change code on the host, code in the docker container will also be changed
    volumes:
      - .:/app
    ports:
      - 5000:5000
    env_file:
      - .env/.env_dev
    environment:
      - FLASK_APP=trendr
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq
    ports:
      - "5672:5672"

  celery_worker_general:
    build:
      context: .
      dockerfile: ./compose/local/flask/Dockerfile
    image: flask_celery_worker_general
    command: /start-celeryworker-general
    volumes:
      - .:/app
    env_file:
      - .env/.env_dev
      - .env/.env_mail_secrets
    environment:
      - FLASK_APP=trendr
    depends_on:
      - rabbitmq
  
  celery_beat:
    build:
      context: .
      dockerfile: ./compose/local/flask/Dockerfile
    image: flask_celery_beat
    command: /start-celerybeat
    volumes:
      - .:/app
    env_file:
      - .env/.env_dev
    environment:
      - FLASK_APP=trendr
    depends_on:
      - rabbitmq
  

  flower:
    image: mher/flower
    env_file:
      - .env/.env_dev
    environment:
      - FLASK_APP=trendr
    ports:
      - "5555:5555"
    depends_on:
      - rabbitmq