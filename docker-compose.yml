version: "3"
services:
  client:
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      dockerfile: Dockerfile.dev
      context: ./react-frontend
    volumes:
      - "/app/node_modules"
      - "./react-frontend:/app"

  api:
    build:
      context: .
      dockerfile: ./compose/local/flask/Dockerfile
    image: flask_backend
    # '/start' is the shell script used to run the service
    command: /start
    # this volume is used to map the files and folders on the host to the container
    # so if we change code on the host, code in the docker container will also be changed
    volumes:
      - .:/app
    ports:
      - "5000:5000"
    env_file:
      - .env/.env_dev
      - .env/.env_apis
    environment:
      - FLASK_APP=trendr.app
    depends_on:
      - redis

  nginx:
    depends_on:
      - api
      - client
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - "3000:80"

  redis:
    image: redis:latest
    ports:
     - '6379:6379'

  celery_worker_general:
    build:
      context: .
      dockerfile: ./compose/local/flask/Dockerfile
    image: flask_celery_worker_general
    command: /start-celeryworker-general
    volumes:
      - .:/app
    env_file:
      - .env/.env_dev
      - .env/.env_mail_secrets
    environment:
      - FLASK_APP=trendr
    depends_on:
      - redis
      - api

  celery_worker_social:
    build:
      context: .
      dockerfile: ./compose/local/flask/Dockerfile
    image: flask_celery_worker_social
    command: /start-celeryworker-social
    volumes:
      - .:/app
    env_file:
      - .env/.env_dev
      - .env/.env_apis
    environment:
      - FLASK_APP=trendr
    depends_on:
      - redis
      - api

  celery_worker_sentiment:
    build:
      context: .
      dockerfile: ./compose/local/flask/Dockerfile
    image: flask_celery_worker_sentiment
    command: /start-celeryworker-sentiment
    volumes:
      - .:/app
    environment:
      - FLASK_APP=trendr
    depends_on:
      - redis
      - api

  celery_worker_search:
    build:
      context: .
      dockerfile: ./compose/local/flask/Dockerfile
    image: flask_celery_worker_search
    command: /start-celeryworker-search
    volumes:
      - .:/app
    environment:
      - FLASK_APP=trendr
    depends_on:
      - redis
      - api

  celery_beat:
    build:
      context: .
      dockerfile: ./compose/local/flask/Dockerfile
    image: flask_celery_beat
    command: /start-celerybeat
    volumes:
      - .:/app
    env_file:
      - .env/.env_dev
    environment:
      - FLASK_APP=trendr
    depends_on:
      - redis

  flower:
    image: mher/flower
    env_file:
      - .env/.env_dev
    environment:
      - FLASK_APP=trendr
    ports:
      - "5555:5555"
    depends_on:
      - redis
