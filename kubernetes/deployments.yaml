apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: client
  template:
    metadata:
      labels:
        component: client
    spec:
      containers:
        - name: client
          image: registry.digitalocean.com/trendr/frontend
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: api
  template:
    metadata:
      labels:
        component: api
    spec:
      containers:
        - name: api
          image: registry.digitalocean.com/trendr/backend
          imagePullPolicy: Always
          command: ["/start"]
          ports:
            - containerPort: 5000
          env:
            - name: FLASK_APP
              value: /app/trendr/app.py
            - name: CELERY_BROKER_URL
              value: redis://redis-service:6379/0
            - name: CELERY_RESULT_BACKEND
              value: redis://redis-service:6379/0
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
spec:
  selector:
    matchLabels:
      component: redis
  replicas: 1
  template:
    metadata:
      labels:
        component: redis
    spec:
      containers:
      - name: redis
        image: redis
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flower-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: flower
  template:
    metadata:
      labels:
        component: flower
    spec:
      containers:
      - name: flower
        image: mher/flower
        ports:
          - containerPort: 5555
        env:
          - name: FLASK_APP
            value: /app/trendr/app.py
          - name: CELERY_BROKER_URL
            value: redis://redis-service:6379/0
          - name: CELERY_RESULT_BACKEND
            value: redis://redis-service:6379/0
            # TODO: figure out if db url is needed and how to pass it
        resources:
          limits:
            cpu: 100m
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-beat-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: celery-beat
  template:
    metadata:
      labels:
        component: celery-beat
    spec:
      containers:
        - name: celery-beat
          image: registry.digitalocean.com/trendr/backend
          command: ["/start-celerybeat"]
          env:
            - name: FLASK_APP
              value: /app/trendr/app.py
            - name: CELERY_BROKER_URL
              value: redis://redis-service:6379/0
            - name: CELERY_RESULT_BACKEND
              value: redis://redis-service:6379/0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker-general-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: celery-worker-general
  template:
    metadata:
      labels:
        component: celery-worker-general
    spec:
      containers:
        - name: celery-worker-general
          image: registry.digitalocean.com/trendr/backend
          command: ["/start-celeryworker-general"]
          env:
            - name: FLASK_APP
              value: /app/trendr/app.py
            - name: CELERY_BROKER_URL
              value: redis://redis-service:6379/0
            - name: CELERY_RESULT_BACKEND
              value: redis://redis-service:6379/0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker-social-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: celery-worker-social
  template:
    metadata:
      labels:
        component: celery-worker-social
    spec:
      containers:
        - name: celery-worker-social
          image: registry.digitalocean.com/trendr/backend
          command: ["/start-celeryworker-social"]
          env:
            - name: FLASK_APP
              value: /app/trendr/app.py
            - name: CELERY_BROKER_URL
              value: redis://redis-service:6379/0
            - name: CELERY_RESULT_BACKEND
              value: redis://redis-service:6379/0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker-sentiment-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: celery-worker-sentiment
  template:
    metadata:
      labels:
        component: celery-worker-sentiment
    spec:
      containers:
        - name: celery-worker-sentiment
          image: registry.digitalocean.com/trendr/backend
          command: ["/start-celeryworker-sentiment"]
          env:
            - name: FLASK_APP
              value: /app/trendr/app.py
            - name: CELERY_BROKER_URL
              value: redis://redis-service:6379/0
            - name: CELERY_RESULT_BACKEND
              value: redis://redis-service:6379/0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker-search-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: celery-worker-search
  template:
    metadata:
      labels:
        component: celery-worker-search
    spec:
      containers:
        - name: celery-worker-search
          image: registry.digitalocean.com/trendr/backend
          command: ["/start-celeryworker-search"]
          env:
            - name: FLASK_APP
              value: /app/trendr/app.py
            - name: CELERY_BROKER_URL
              value: redis://redis-service:6379/0
            - name: CELERY_RESULT_BACKEND
              value: redis://redis-service:6379/0